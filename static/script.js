// ... (–≤—Å–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤–≤–µ—Ä—Ö—É –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
const askButton = document.getElementById('askButton');
const questionInput = document.getElementById('questionInput');
const responseArea = document.getElementById('responseArea');
const pageSelect = document.getElementById('pageSelect');
const micButton = document.getElementById('micButton');


// ===============================================================
// --- –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ ---
// ===============================================================

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤, —á—Ç–æ–±—ã –Ω–µ –∏—Å–∫–∞—Ç—å –∏—Ö –∫–∞–∂–¥—ã–π —Ä–∞–∑
let voices = [];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤
const populateVoiceList = () => {
    voices = window.speechSynthesis.getVoices();
    // –í—ã–≤–µ–¥–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
    console.log("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:", voices);
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ–≥–¥–∞ –≥–æ–ª–æ—Å–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
populateVoiceList();
if (window.speechSynthesis.onvoiceschanged !== undefined) {
    window.speechSynthesis.onvoiceschanged = populateVoiceList;
}

const speak = (text) => {
    // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –ª—é–±–æ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    window.speechSynthesis.cancel();

    const utterance = new SpeechSynthesisUtterance(text);
    
    // --- –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –ª—É—á—à–µ–≥–æ –≥–æ–ª–æ—Å–∞ ---
    // –ò—â–µ–º —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å –æ—Ç Google, –æ–Ω –æ–±—ã—á–Ω–æ —Å–∞–º—ã–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π.
    // –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏—â–µ–º –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å.
    const russianVoice = voices.find(voice => voice.name === 'Google —Ä—É—Å—Å–∫–∏–π') || voices.find(voice => voice.lang === 'ru-RU');
    
    if (russianVoice) {
        utterance.voice = russianVoice;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ–ª–æ—Å–∞ (–º–æ–∂–µ—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å —ç—Ç–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏)
    utterance.pitch = 1; // –í—ã—Å–æ—Ç–∞ –≥–æ–ª–æ—Å–∞ (–æ—Ç 0 –¥–æ 2)
    utterance.rate = 1; // –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ (–æ—Ç 0.1 –¥–æ 10)
    
    window.speechSynthesis.speak(utterance);
};

// ===============================================================
// ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ sendQuestion –∏ –ª–æ–≥–∏–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô) ...
// ===============================================================

const sendQuestion = async () => {
    const question = questionInput.value;
    if (!question) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.');
        return;
    }
    responseArea.innerText = '–î—É–º–∞—é –Ω–∞–¥ –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...';

    try {
        const response = await fetch('/api/ask', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                question: question,
                url: pageSelect.value
            })
        });
        const data = await response.json();

        if (data.answer) {
            const answerText = data.answer;
            responseArea.innerText = answerText;
            speak(answerText);
        } else {
            const errorText = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            responseArea.innerText = errorText;
            speak(errorText);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
        const errorText = '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω.';
        responseArea.innerText = errorText;
        speak(errorText);
    }
};

askButton.addEventListener('click', sendQuestion);

const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
if (SpeechRecognition) {
    const recognition = new SpeechRecognition();
    recognition.lang = 'ru-RU';
    recognition.continuous = false;

    micButton.addEventListener('click', () => {
        // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–µ—á—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        window.speechSynthesis.cancel(); 
        recognition.start();
    });

    recognition.onstart = () => {
        micButton.classList.add('is-listening');
        micButton.innerText = '...';
    };

    recognition.onend = () => {
        micButton.classList.remove('is-listening');
        micButton.innerText = 'üé§';
    };

    recognition.onresult = (event) => {
        const transcript = event.results[0][0].transcript;
        questionInput.value = transcript;
        sendQuestion(); 
    };

    recognition.onerror = (event) => {
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: ' + event.error);
    };

} else {
    console.log('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Web Speech API');
    micButton.style.display = 'none';
}